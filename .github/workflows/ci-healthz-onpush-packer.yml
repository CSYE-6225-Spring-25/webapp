name: Healthz Packer Build Machine image

on:
  push:
    branches:
        - main

env:
  PACKER_VERSION: "1.12.0"

jobs:
  packer-mi-generation:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check the Repo
        uses: actions/checkout@v4

      - name: Zipping Application
        run: |
          zip -r webapp.zip .
        working-directory: .
    
      - name: List artifact contents
        run: ls -la webapp.zip
    
      - name: AWS profile configuration
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Run packer init
        working-directory: packer
        run: packer init .

      - name: Run packer validate
        working-directory: packer
        run: packer validate .

      - name: Build AMI with Packer
        working-directory: packer
        if: success()
        run: |
          packer build --force \
            -var "zip-path=$(pwd)/../webapp.zip" \
            -var "aws-profile=dev" \
            -var "aws-region=${{ secrets.AWS_REGION }}" \
            -var "aws-instance-type=t2.micro" \
            -var "aws-ssh-username=ubuntu" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "db_user=${{ secrets.DB_USERNAME }}" \
            -var "db_name=${{ secrets.DB_NAME }}" \
            -var "port=${{ secrets.PORT }}" \
            -var "db_host=${{ secrets.DB_HOST }}" \
            -var "db_port=${{ secrets.DB_PORT }}" \
            -var "aws-subnet-id=${{ secrets.AWS_SUBNET_ID }}" \
            .

