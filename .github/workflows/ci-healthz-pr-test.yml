name: CI healthCheck test

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    env:
      APP_PORT: ${{ secrets.PORT }}
      PG_HOST: ${{ secrets.DB_HOST }}
      PG_PORT: ${{ secrets.DB_PORT }}
      PG_USER: ${{ secrets.DB_USERNAME }}
      PG_DATABASE: ${{ secrets.DB_NAME }}
      PG_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18  

      - name: Install project dependencies
        run: npm install 

      - name: Install PostgreSQL and dependencies
        run: |
          echo "Setting up PostgreSQL"
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib

      - name: Initialize PostgreSQL
        run: |
          echo "Starting PostgreSQL service"
          sudo systemctl start postgresql
          sudo systemctl enable postgresql

      - name: Ensure Database Exists and Configure User
        run: |
          echo "Checking if database $PG_DATABASE exists"
          DB_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='$PG_DATABASE'")

          if [ "$DB_EXISTS" != "1" ]; then
            echo "Database $PG_DATABASE does not exist. Creating now..."
            sudo -u postgres psql -c "CREATE DATABASE $PG_DATABASE OWNER $PG_USER;"
          else
            echo "Database $PG_DATABASE already exists."
          fi

          echo "Updating user password"
          sudo -u postgres psql -c "ALTER USER $PG_USER WITH PASSWORD '$PG_PASSWORD';"

      - name: Execute test suite
        run: npm test

      - name: Publish test results
        if: success()
        run: |
          echo "healthz passed" >> $GITHUB_STEP_SUMMARY
          echo "CAN MERGE" >> $GITHUB_STEP_SUMMARY
